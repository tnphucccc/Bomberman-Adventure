Index: src/main/java/Entity/Mob.java
===================================================================
diff --git a/src/main/java/Entity/Mob.java b/src/main/java/Entity/Mob.java
--- a/src/main/java/Entity/Mob.java	
+++ b/src/main/java/Entity/Mob.java	
@@ -11,16 +11,16 @@
 
 public class Mob extends Entity{
     gamePanel gamepanel;
-    String[] dir = {"down","up","right","left"};
-    private final Random rand = new Random();
+    String[] dir = {"down", "up","right","left"};
+    private Random rand = new Random();
     public Mob(gamePanel gamepanel,int x,int y){
         this.gamepanel=gamepanel;
         this.x =x;
         this.y =y;
         solidArea = new Rectangle();
-        solidArea.x = 4;
+        solidArea.x = 8;
         solidArea.y = 16;
-        solidArea.width = 36;
+        solidArea.width = 32;
         solidArea.height = 32;
         setDefault();
         getMobImage();
@@ -43,6 +43,12 @@
             }
         } else{
             this.direction = dir[rand.nextInt(4)];
+            /*switch (direction) {
+                case "up" -> direction = "down";
+                case "down" -> direction = "up";
+                case "left" -> direction = "right";
+                case "right" -> direction = "left";
+            }*/
         }
         spriteCounter++;
         if (spriteCounter > 8) {
@@ -63,14 +69,14 @@
             down2 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobDown-2.png")));
             down3 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobDown-3.png")));
             down4 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobDown-4.png")));
-            left1 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobLeft-1.png")));
-            left2 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobLeft-2.png")));
-            left3 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobLeft-1.png")));
-            left4 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobLeft-2.png")));
-            right1 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobRight-1.png")));
-            right2 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobRight-2.png")));
-            right3 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobRight-1.png")));
-            right4 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Mob/MobRight-2.png")));
+            left1 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_left1.png")));
+            left2 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_left2.png")));
+            left3 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_left3.png")));
+            left4 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_left4.png")));
+            right1 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_right1.png")));
+            right2 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_right2.png")));
+            right3 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_right3.png")));
+            right4 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_right4.png")));
             die1 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_die1.png")));
             die2 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_die2.png")));
             die3 = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream("/Player/player_die3.png")));
@@ -82,34 +88,40 @@
         }
     }
     public void draw(Graphics2D g2) {
-        BufferedImage img = null;
+        /*
+         g2.setColor(Color.WHITE);
+         g2.fillRect(x,y,gamepanel.original_tile_size,gamepanel.original_tile_size);
+        */
+
+        BufferedImage img=null;
         switch (direction) {
-            case "up" -> img = getBufferedImage(up1, up2, up3, up4);
-            case "down" -> img = getBufferedImage(down1, down2, down3, down4);
-            case "left" -> img = getBufferedImage(left1, left2, left3, left4);
-            case "right" -> img = getBufferedImage(right1, right2, right3, right4);
+            case "up" -> img = getBufferedImage(null, up1, up2, up3, up4);
+            case "down" -> img = getBufferedImage(null, down1, down2, down3, down4);
+            case "left" -> img = getBufferedImage(null, left1, left2, left3, left4);
+            case "right" -> img = getBufferedImage(null, right1, right2, right3, right4);
         }
         g2.drawImage(img, x, y, gamepanel.original_tile_size * gamePanel.scale,
                 gamepanel.original_tile_size * gamePanel.scale, null);
     }
 
-    private BufferedImage getBufferedImage(BufferedImage img1,
+    private BufferedImage getBufferedImage(BufferedImage img,
+                                           BufferedImage img1,
                                            BufferedImage img2,
                                            BufferedImage img3,
                                            BufferedImage img4) {
         if (spriteNum == 1) {
-            return img1;
+            img = img1;
         }
         else if (spriteNum == 2) {
-            return img2;
+            img = img2;
         }
         else if (spriteNum == 3) {
-            return img3;
+            img = img3;
         }
         else if (spriteNum == 4) {
-            return img4;
+            img = img4;
         }
-        return null;
+        return img;
     }
 }
 
